#!/bin/bash

#
# graylog2-server:   graylog2 message collector
#
# chkconfig: - 98 02
# description:  This daemon listens for syslog and GELF messages and stores them in mongodb
#

CMD=$1
# resolve links - $0 may be a softlink
GRAYLOG2CTL="$0"

while [ -h "$GRAYLOG2CTL" ]; do
    ls=`ls -ld "$GRAYLOG2CTL"`
    link=`expr "$ls" : '.*-> \(.*\)$'`
    if expr "$link" : '/.*' > /dev/null; then
        GRAYLOG2CTL="$link"
    else
        GRAYLOG2CTL=`dirname "$GRAYLOG2CTL"`/"$link"
    fi
done

#####################
## Any changes to settings make in /etc/sysconfig/graylog2-server
#####################
JAVA_CMD=`which java 2>/dev/null`

GRAYLOG2CTL_DIR=`dirname "$GRAYLOG2CTL"`
GRAYLOG2_SERVER_JAR=graylog2-server.jar
GRAYLOG2_CONF=/etc/graylog2.conf
GRAYLOG2_PID=/tmp/graylog2.pid
GRAYLOG2_USER=root
LOG_FILE=/var/log/graylog2/graylog2-server.log
ADDITIONAL_JAVA_OPTS=""
#####################
## End changes
#####################

[ -f /etc/sysconfig/graylog2-server ] && . /etc/sysconfig/graylog2-server
[ -f /etc/rc.d/init.d/functions ] && . /etc/rc.d/init.d/functions

RETVAL=0

# Make sure that the java exec is found
 
if [[ "" =~ "$JAVA_CMD" || ! -x $JAVA_CMD ]] ; then
	echo "ERROR: Java not found! Exiting."
	echo_failure
	$RETVAL=1
fi

start() {
    echo -n "Starting graylog2-server ..."
    cd "$GRAYLOG2CTL_DIR/.."
    su -s /bin/sh ${GRAYLOG2_USER} -c "${JAVA_CMD} ${ADDITIONAL_JAVA_OPTS} -jar ${GRAYLOG2_SERVER_JAR} -f ${GRAYLOG2_CONF} -p ${GRAYLOG2_PID} >> ${LOG_FILE} &"
    RETVAL=$?

    if [ $RETVAL -eq 0 ]
    then
        echo_success
    else
        echo_failure
    fi

    echo
}

stop() {
    PID=`cat ${GRAYLOG2_PID}`
    echo -n "Stopping graylog2-server ($PID) ..."
    if kill $PID; then
        rm ${GRAYLOG2_PID}
        echo_success
    else
        echo_failure
    fi
    echo
}

restart() {
    echo "Restarting graylog2-server ..."
    stop
    start
}

status() {
    pid=$(get_pid)
    if [ ! -z $pid ]; then
        if pid_running $pid; then
            echo "graylog2-server running as pid $pid"
            return 0
        else
            echo "Stale pid file with $pid - removing..."
            rm ${GRAYLOG2_PID}
        fi
    fi

    echo "graylog2-server not running"
}

get_pid() {
    cat ${GRAYLOG2_PID} 2> /dev/null
}

pid_running() {
    kill -0 $1 2> /dev/null
}

case "$CMD" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    restart)
        restart
        ;;
    status)
        status
        ;;
    *)
        echo "Usage $0 {start|stop|restart|status}"
        RETVAL=1
esac
